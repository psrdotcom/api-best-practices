# OpenAPI 3.1.0 specification for REST API best practices
# 
# This API provides best practices for REST API design, including examples of anyOf, oneOf, and allOf in OpenAPI 3.1.x.
# 
# Info:
# - Title: REST API best practices
# - Description: This API provides best practices for REST API design.
# - Version: 1.0.0-oas3-oas3.1
# - Contact: Suresh Raju Pilli (https://www.pillisureshraju.in/, sureshraju.pilli@gmail.com)
# 
# Servers:
# - http://localhost:8000 (Testing server)
# - https://military-kesley-psrandapps-d7f588a1.koyeb.app (Main (Production) Server)
# 
# Tags:
# - Pets: Examples of anyOf OpenAPI 3.1.x
# - Shapes: Examples of oneOf OpenAPI 3.1.x
# - Products: Examples of allOf OpenAPI 3.1.x
# - Items: Paginated items
# - Laptops: Entity Object Verbosity - Projection
# 
# Paths:
# - /pets/anyof: Add a pet (either a cat or a dog)
# - /shapes/oneof: Create a shape (either a rectangle or circle with strict validation)
# - /products/allof: Create a product that must satisfy all schema requirements
# - /items: Get a paginated list of items
# - /laptops/{laptop_id}: Get laptop details with configurable verbosity level
# - /laptops: List laptops with pagination and verbosity control
# 
# Components:
# - Schemas:
#   - Cat: Schema for a cat
#   - Dog: Schema for a dog
#   - ShapeType: Enum for shape types (rectangle, circle)
#   - ShapeBase: Base schema for shapes
#   - Rectangle: Schema for a rectangle
#   - Circle: Schema for a circle
#   - OneOfShape: Schema for oneOf shape (rectangle or circle)
#   - BaseProduct: Base schema for a product
#   - InventoryItem: Schema for inventory item
#   - ShippingDetails: Schema for shipping details
#   - CompleteProduct: Schema for a complete product (allOf BaseProduct, InventoryItem, ShippingDetails)
#   - Item: Schema for an item
#   - PaginatedResponse: Schema for paginated response
#   - ResponseVerbosity: Enum for response verbosity levels (minimum, regular, extended)
#   - LaptopBase: Base schema for a laptop
#   - LaptopRegular: Schema for a regular laptop (allOf LaptopBase)
#   - LaptopExtended: Schema for an extended laptop (allOf LaptopRegular)
#   - OneOfShapeErrorResponse: Schema for oneOf shape error response
openapi: 3.1.0
info:
  title: REST API best practices
  description: This API provides best practices for REST API design.
  version: 1.0.0-oas3-oas3.1
  contact:
    name: Suresh Raju Pilli
    url: https://www.pillisureshraju.in/
    email: sureshraju.pilli@gmail.com
servers:
  - url: http://localhost:8000
    description: Testing server
  - url: https://military-kesley-psrandapps-d7f588a1.koyeb.app
    description: Main (Production) Server
tags:
  - name: Pets
    description: Examples of anyOf OpenAPI 3.1.x
  - name: Shapes
    description: Examples of oneOf OpenAPI 3.1.x
  - name: Products
    description: Examples of allOf OpenAPI 3.1.x
  - name: Items
    description: Paginated items
  - name: Laptops
    description: Entity Object Verbosity - Projection
paths:
  /pets/anyof:
    post:
      summary: Add a pet
      description: Add a pet which can be either a cat or a dog.
      tags:
        - Pets
      operationId: addPet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Cat'
                - $ref: '#/components/schemas/Dog'
              discriminator:
                propertyName: petType
            examples:
              catExample:
                summary: A cat example
                value:
                  pet:
                    petType: cat
                    name: Whiskers
                    favoriteToy: Ball
              dogExample:
                summary: A dog example
                value:
                  pet:
                    petType: dog
                    name: Buddy
                    breed: Golden Retriever
      responses:
        '200':
          description: Pet added successfully.
        '400':
          description: Bad Request - Invalid input data.
        '422':
          description: Unprocessable Entity - Validation error.
        '500':
          description: Internal Server Error - Something went wrong on the server.

  /shapes/oneof:
    post:
      summary: Create a shape (oneOf example)
      description: Accepts either a rectangle or circle with strict validation
      operationId: createShape
      tags:
        - Shapes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneOfShape'
            examples:
              validRectangle:
                summary: Valid Rectangle
                value:
                  shape:
                    shape_type: rectangle
                    color: "#FF5733"
                    name: "MyRectangle"
                    width: 200
                    height: 100
                    aspect_ratio: 2.0
              invalidRectangle:
                summary: Invalid Rectangle
                value:
                  shape:
                    shape_type: rectangle
                    color: "invalid-color-code"
                    name: ""
                    width: -10
                    height: 1001
                    aspect_ratio: -1.0
              validCircleMinFields:
                summary: A valid circle with minimum fields
                value:
                  shape:
                    shape_type: circle
                    name: "MyCircle"
                    radius: 50
              invalidCircle:
                summary: An invalid circle example
                value:
                  shape:
                    shape_type: circle
                    name: "NoCircle"
                    radius: -10
      responses:
        '200':
          description: Shape created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  shape:
                    $ref: '#/components/schemas/OneOfShape'
                  validation_details:
                    type: object
        '400':
          description: Bad Request - Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: array
                    items:
                      type: string
        '422':
          description: Unprocessable Entity - Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneOfShapeErrorResponse'
  /products/allof:
    post:
      summary: Create a product (allOf example)
      description: Creates a product that must satisfy all schema requirements
      operationId: createProduct
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteProduct'
            examples:
              validProduct:
                summary: A valid product example
                value:
                  id: AB123456
                  name: Premium Widget
                  price: 29.99
                  stock_count: 100
                  warehouse_location: A-12-34
                  reorder_point: 25
                  weight_kg: 1.5
                  dimensions_cm:
                    - 30
                    - 20
                    - 15
                  fragile: true
              invalidProduct:
                summary: An invalid product example
                value:
                  id: "123456"
                  name: Widget
                  price: 29.99
                  stock_count: 100
                  warehouse_location: A-12-34
                  reorder_point: 25
                  weight_kg: 1.5
                  dimensions_cm:
                    - 30
                    - 20
                    - 15
                  fragile: true
              fieldMissing:
                summary: Field missing in the request
                value:
                  id: AB123456
                  name: Premium Widget
                  price: 29.99
                  stock_count: 100
                  reorder_point: 25
                  weight_kg: 1.5
                  dimensions_cm:
                    - 30
                    - 20
                    - 15
                  fragile: true
      responses:
        '200':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  product:
                    $ref: '#/components/schemas/CompleteProduct'
                  calculated_metrics:
                    type: object
                    properties:
                      volume_m3:
                        type: number
                      density_kg_m3:
                        type: number
                      reorder_value:
                        type: number
  /items:
    get:
      summary: Get a paginated list of items
      description: Paginated response of the items
      operationId: createItems
      tags:
        - Items
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
          description: Page number (starting from 1)
        - name: size
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 50
          description: Number of items per page (max 50)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
  /laptops/{laptop_id}:
    get:
      summary: Get laptop details
      description: |
        Retrieve laptop information with configurable verbosity level:
        - minimum: Basic info only
        - regular: Common specifications
        - extended: Complete details
      operationId: listLaptops
      tags:
        - Laptops
      parameters:
        - name: laptop_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the laptop
        - name: verbosity
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ResponseVerbosity'
          description: Control the detail level of the response
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LaptopBase'
                  - $ref: '#/components/schemas/LaptopRegular'
                  - $ref: '#/components/schemas/LaptopExtended'
              examples:
                minimum:
                  value:
                    id: LP123456
                    brand: TechBook
                    model: Pro X15
                    price: 1299.99
                regular:
                  value:
                    id: LP123456
                    brand: TechBook
                    model: Pro X15
                    price: 1299.99
                    processor: Intel Core i7-12700H
                    ram_gb: 16
                    storage_gb: 512
                    screen_size: 15.6
                    operating_system: Windows 11 Pro
                    in_stock: true
                extended:
                  value:
                    id: LP123456
                    brand: TechBook
                    model: Pro X15
                    price: 1299.99
                    processor: Intel Core i7-12700H
                    ram_gb: 16
                    storage_gb: 512
                    screen_size: 15.6
                    operating_system: Windows 11 Pro
                    in_stock: true
                    graphics_card: NVIDIA RTX 3060 6GB
                    battery_whr: 80
                    weight_kg: 2.1
                    dimensions_cm:
                      - 35.8
                      - 24.2
                      - 1.9
                    ports:
                      - USB-C
                      - USB-A
                      - HDMI
                      - Audio Jack
                    warranty_months: 24
                    release_date: '2023-06-15T00:00:00Z'
                    last_updated: '2024-01-15T00:00:00Z'
                    description: Professional grade laptop for demanding users
                    features:
                      - Backlit Keyboard
                      - Fingerprint Reader
                      - Thunderbolt 4
                    reviews_count: 128
                    average_rating: 4.5
  /laptops:
    get:
      summary: List laptops
      description: Retrieve a list of laptops with pagination and verbosity control
      operationId: listAllLaptops
      tags:
        - Laptops
      parameters:
        - name: verbosity
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ResponseVerbosity'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of laptops
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/LaptopBase'
                    - $ref: '#/components/schemas/LaptopRegular'
                    - $ref: '#/components/schemas/LaptopExtended'
components:
  schemas:
    Cat:
      type: object
      properties:
        petType:
          type: string
          enum:
            - cat
        name:
          type: string
        favoriteToy:
          type: string
      required:
        - petType
        - name
    Dog:
      type: object
      properties:
        petType:
          type: string
          enum:
            - dog
        name:
          type: string
        breed:
          type: string
      required:
        - petType
        - name
    ShapeType:
      type: string
      enum:
        - rectangle
        - circle
    ShapeBase:
      type: object
      properties:
        shape_type:
          $ref: '#/components/schemas/ShapeType'
        color:
          type: string
          pattern: ^#[0-9a-fA-F]{6}$
        name:
          type: string
          minLength: 1
          maxLength: 50
      required:
        - shape_type
    Rectangle:
      allOf:
        - $ref: '#/components/schemas/ShapeBase'
        - type: object
          properties:
            width:
              type: number
              minimum: 0
              exclusiveMinimum: 0
              maximum: 1000
            height:
              type: number
              minimum: 0
              exclusiveMinimum: 0
              maximum: 1000
            aspect_ratio:
              type: number
          required:
            - width
            - height
    Circle:
      allOf:
        - $ref: '#/components/schemas/ShapeBase'
        - type: object
          properties:
            radius:
              type: number
              minimum: 0
              exclusiveMinimum: 0
              maximum: 500
            circumference:
              type: number
            area:
              type: number
          required:
            - radius
    OneOfShape:
      type: object
      properties:
        shape:
          oneOf:
            - $ref: '#/components/schemas/Rectangle'
            - $ref: '#/components/schemas/Circle'
      required:
        - shape
    BaseProduct:
      type: object
      properties:
        id:
          type: string
          pattern: ^[A-Z]{2}[0-9]{6}$
        name:
          type: string
          minLength: 1
          maxLength: 100
        price:
          type: number
          minimum: 0
          exclusiveMinimum: 0
      required:
        - id
        - name
        - price
    InventoryItem:
      type: object
      properties:
        stock_count:
          type: integer
          minimum: 0
        warehouse_location:
          type: string
          pattern: ^[A-Z]-[0-9]{2}-[0-9]{2}$
        reorder_point:
          type: integer
          minimum: 0
      required:
        - stock_count
        - warehouse_location
        - reorder_point
    ShippingDetails:
      type: object
      properties:
        weight_kg:
          type: number
          minimum: 0
          exclusiveMinimum: 0
          maximum: 1000
        dimensions_cm:
          type: array
          items:
            type: number
            minimum: 0
            exclusiveMinimum: 0
            maximum: 300
          minItems: 3
          maxItems: 3
        fragile:
          type: boolean
          default: false
      required:
        - weight_kg
        - dimensions_cm
    CompleteProduct:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
        - $ref: '#/components/schemas/InventoryItem'
        - $ref: '#/components/schemas/ShippingDetails'
    Item:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    PaginatedResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        total:
          type: integer
        page:
          type: integer
        size:
          type: integer
        total_pages:
          type: integer

    ResponseVerbosity:
      type: string
      enum:
        - minimum
        - regular
        - extended
      default: regular
    LaptopBase:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the laptop
        brand:
          type: string
        model:
          type: string
        price:
          type: number
          format: float
      required:
        - id
        - brand
        - model
        - price
    LaptopRegular:
      allOf:
        - $ref: '#/components/schemas/LaptopBase'
        - type: object
          properties:
            processor:
              type: string
            ram_gb:
              type: integer
            storage_gb:
              type: integer
            screen_size:
              type: number
              format: float
            operating_system:
              type: string
            in_stock:
              type: boolean
          required:
            - processor
            - ram_gb
            - storage_gb
            - screen_size
            - operating_system
            - in_stock
    LaptopExtended:
      allOf:
        - $ref: '#/components/schemas/LaptopRegular'
        - type: object
          properties:
            graphics_card:
              type: string
            battery_whr:
              type: integer
            weight_kg:
              type: number
              format: float
            dimensions_cm:
              type: array
              items:
                type: number
              minItems: 3
              maxItems: 3
            ports:
              type: array
              items:
                type: string
            warranty_months:
              type: integer
            release_date:
              type: string
              format: date-time
            last_updated:
              type: string
              format: date-time
            description:
              type: string
            features:
              type: array
              items:
                type: string
            reviews_count:
              type: integer
            average_rating:
              type: number
              format: float
          required:
            - graphics_card
            - battery_whr
            - weight_kg
            - dimensions_cm
            - ports
            - warranty_months
            - release_date
            - last_updated
            - description
            - features
            - reviews_count
            - average_rating
    OneOfShapeErrorResponse:
      type: object
      properties:
        detail:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              loc:
                type: array
                items:
                  type: string
              msg:
                type: string
              input:
                type: object
              ctx:
                type: object
                additionalProperties: true
      example:
        detail: 
          - type: "missing"
            loc: ["body", "shape", "Rectangle", "width"]
            msg: "Field required"
            input: 
              shape_type: "circle"
              name: "NoCircle"
              radius: -10
          - type: "missing"
            loc: ["body", "shape", "Rectangle", "height"]
            msg: "Field required"
            input: 
              shape_type: "circle"
              name: "NoCircle"
              radius: -10
          - type: "greater_than"
            loc: ["body", "shape", "function-after[calculate_circle_properties(), Circle]", "radius"]
            msg: "Input should be greater than 0"
            input: 
              value: -10
            ctx: 
              gt: 0